at_fn_group_banner 83 'lalib-syntax.at:24' \
  "syntax of .la files" "                            " 7
at_xfail=yes
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon





cat >main.c <<'_ATEOF'
#include <ltdl.h>
#include <stdio.h>
#include <assert.h>

int
main (int argc, char* argv[])
{
  int err = 0;
  lt_dlhandle plugin_handle;

  if (argc < 2)
    {
      fprintf (stderr, "usage: %s plugin\n", argv[0]);
      return 1;
    }

  lt_dlinit ();
  plugin_handle = lt_dlopenext (argv[1]);
  if (NULL != plugin_handle)
    {
      printf ("plugin opened successfully!\n");
      lt_dlclose (plugin_handle);
    }
  else
    {
      const char *error = lt_dlerror ();
      assert (error != NULL);
      printf ("plugin failed to open: %s\n", error);
      err = 1;
    }
  lt_dlexit ();
  return err;
}
_ATEOF


cat >module.c <<'_ATEOF'
int foo (void) { return 0; }
_ATEOF


: ${LTDLINCL="-I$abs_top_srcdir/libltdl"}
: ${LIBLTDL="$abs_builddir/../libltdl/libltdlc.la"}

# Skip this test when called from:
#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install
{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:75: case \$LIBLTDL in #(
 */_inst/lib/*) test -f \$LIBLTDL || (exit 77) ;;
esac"
at_fn_check_prepare_notrace 'an embedded newline' "lalib-syntax.at:75"
( $at_check_trace; case $LIBLTDL in #(
 */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;
esac
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }


CPPFLAGS="$CPPFLAGS $LTDLINCL"

{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:81: \$CC \$CPPFLAGS \$CFLAGS -c main.c"
at_fn_check_prepare_dynamic "$CC $CPPFLAGS $CFLAGS -c main.c" "lalib-syntax.at:81"
( $at_check_trace; $CC $CPPFLAGS $CFLAGS -c main.c
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:82: \$LIBTOOL --mode=compile \$CC \$CPPFLAGS \$CFLAGS -c module.c"
at_fn_check_prepare_dynamic "$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c module.c" "lalib-syntax.at:82"
( $at_check_trace; $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c module.c
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:84: \$LIBTOOL --mode=link \$CC \$CFLAGS \$LDFLAGS -o module.la module.lo 	 -module -avoid-version -rpath /somewhere"
at_fn_check_prepare_dynamic "$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o module.la module.lo 	 -module -avoid-version -rpath /somewhere" "lalib-syntax.at:84"
( $at_check_trace; $LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o module.la module.lo 	 -module -avoid-version -rpath /somewhere
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:86: \$LIBTOOL --mode=link \$CC \$CFLAGS \$LDFLAGS -o main main.\$OBJEXT \$LIBLTDL"
at_fn_check_prepare_dynamic "$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main main.$OBJEXT $LIBLTDL" "lalib-syntax.at:86"
( $at_check_trace; $LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main main.$OBJEXT $LIBLTDL
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }



# Several bogus test cases.

cat >missing-closing-quote.la <<'_ATEOF'
# missing-closing-quote.la - a libtool library file
# Generated by libtool
dlname='module.so
library_names='module.so module.so module.so'
old_library='module.a'
installed=no
shouldnotlink=yes
libdir='/somewhere'
_ATEOF


cat >wrong-quotes.la <<'_ATEOF'
# wrong-quotes.la - a libtool library file
# Generated by libtool
dlname="module.so"
library_names='module.so module.so module.so'
old_library='module.a'
installed=no
shouldnotlink=yes
libdir='/somewhere'
_ATEOF


cat >no-dlname.la <<'_ATEOF'
# no-dlname.la - a libtool library file
# Generated by libtool
installed=no
shouldnotlink=yes
libdir='/somewhere'
_ATEOF


cat >nonexistent-dlname.la <<'_ATEOF'
# nonexistent-dlname.la - a libtool library file
# Generated by libtool
dlname='does-not-exist.so'
installed=no
shouldnotlink=yes
libdir='/somewhere'
_ATEOF


for file in ./missing-closing-quote.la ./wrong-quotes.la \
	    ./no-dlname.la ./nonexistent-dlname.la; do
  lt_exe=./main; if test -f "./main$EXEEXT"; then lt_exe=$lt_exe$EXEEXT; fi
{ set +x
$as_echo "$at_srcdir/lalib-syntax.at:133: if \"\$lt_exe\" \$file; then :; else lt_status=\$?; 	   test \$lt_status != 1 && 	   test \"X\$host\" != \"X\$build\" && test -x \"\$lt_exe\" && exit 77; 	   exit \$lt_status; fi"
at_fn_check_prepare_dynamic "if \"$lt_exe\" $file; then :; else lt_status=$?; 	   test $lt_status != 1 && 	   test \"X$host\" != \"X$build\" && test -x \"$lt_exe\" && exit 77; 	   exit $lt_status; fi" "lalib-syntax.at:133"
( $at_check_trace; if "$lt_exe" $file; then :; else lt_status=$?; 	   test $lt_status != 1 && 	   test "X$host" != "X$build" && test -x "$lt_exe" && exit 77; 	   exit $lt_status; fi
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 1 $at_status "$at_srcdir/lalib-syntax.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }


  { set +x
$as_echo "$at_srcdir/lalib-syntax.at:134: grep 'plugin failed to open' stdout"
at_fn_check_prepare_trace "lalib-syntax.at:134"
( $at_check_trace; grep 'plugin failed to open' stdout
) >>"$at_stdout" 2>>"$at_stderr"
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/lalib-syntax.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

done

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
