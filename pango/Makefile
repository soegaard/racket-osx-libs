# Makefile.in generated by automake 1.11.1 from Makefile.am.
# pango/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







pkgdatadir = $(datadir)/pango
pkgincludedir = $(includedir)/pango
pkglibdir = $(libdir)/pango
pkglibexecdir = $(libexecdir)/pango
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin13.0.0
host_triplet = x86_64-apple-darwin13.0.0
#am__append_1 = -export-symbols $(srcdir)/pango.def -Wl,pango-win32-res.o
#am__append_2 = pango-win32-res.o pango.def

# ------------------- libpangox -------------------
#am__append_3 = $(pangox_headers)
#am__append_4 = libpangox-1.0.la
#am__append_5 = -export-symbols $(srcdir)/pangox.def -Wl,pangox-win32-res.o
#am__append_6 = pangox-win32-res.o pangox.def

# ------------------- libpangoft2 -------------------
am__append_7 = $(pangoft2_headers)
am__append_8 = libpangoft2-1.0.la
am__append_9 = PangoFT2-1.0.gir
#am__append_10 = -export-symbols $(srcdir)/pangoft2.def -Wl,pangoft2-win32-res.o
#am__append_11 = pangoft2-win32-res.o pangoft2.def

# ------------------- libpangoxft -------------------
#am__append_12 = $(pangoxft_headers)
#am__append_13 = libpangoxft-1.0.la
#am__append_14 = PangoXft-1.0.gir
#am__append_15 = -export-symbols $(srcdir)/pangoxft.def -Wl,pangoxft-win32-res.o
#am__append_16 = pangoxft-win32-res.o pangoxft.def

# ------------------- libpangocairo -------------------
am__append_17 = $(pangocairo_headers)
am__append_18 = libpangocairo-1.0.la
am__append_19 = PangoCairo-1.0.gir
##am__append_20 = -export-symbols $(srcdir)/pangocairo.def -Wl,pangocairo-win32-res.o
##am__append_21 = pangocairo-win32-res.o pangocairo.def
#am__append_22 = libpangowin32-$(PANGO_API_VERSION).la $(WIN32_LIBS)
#am__append_23 = libpangowin32-$(PANGO_API_VERSION).la 
#am__append_24 = pangocairo-win32font.c pangocairo-win32fontmap.c pangocairo-win32.h
am__append_25 = libpangoft2-$(PANGO_API_VERSION).la $(FREETYPE_LIBS)
am__append_26 = libpangoft2-$(PANGO_API_VERSION).la 
am__append_27 = \
	pangocairo-fcfont.c	\
	pangocairo-fcfontmap.c  \
	pangocairo-fc.h

am__append_28 = \
	modules.h		\
	module-defs-coretext.c	\
	pangocoretext.h		\
	pangocoretext.c		\
	pangocoretext-private.h	\
	pangocoretext-fontmap.c	\
	pangocairo-coretext.h	\
	pangocairo-coretextfont.c	\
	pangocairo-coretextfont.h	\
	pangocairo-coretextfontmap.c

am__append_29 = pangocoretext.h
am__append_30 = -framework CoreFoundation -framework ApplicationServices
am__append_31 = $(INCLUDED_CORE_TEXT_MODULES)
#am__append_32 = \
#	modules.h		\
#	module-defs-atsui.c	\
#	pangoatsui.h		\
#	pangoatsui.c		\
#	pangoatsui-private.h	\
#	pangoatsui-fontmap.c	\
#	pangocairo-atsui.h	\
#	pangocairo-atsuifont.c	\
#	pangocairo-atsuifont.h	\
#	pangocairo-atsuifontmap.c

#am__append_33 = pangoatsui.h
#am__append_34 = -framework CoreFoundation -framework Carbon -framework Cocoa
#am__append_35 = $(INCLUDED_ATSUI_MODULES)

# ------------------- libpangowin32 -------------------
#am__append_36 = pangowin32.h
#am__append_37 = libpangowin32-1.0.la
#am__append_38 = -export-symbols $(srcdir)/pangowin32.def -Wl,pangowin32-win32-res.o
#am__append_39 = pangowin32-win32-res.o pangowin32.def
#am__append_40 = pangoft2-$(PANGO_API_VERSION).lib 
bin_PROGRAMS = pango-querymodules$(EXEEXT)
#am__append_41 = libpangox-$(PANGO_API_VERSION).la
#am__append_42 = libpangoxft-$(PANGO_API_VERSION).la
am__append_43 = libpangoft2-$(PANGO_API_VERSION).la
#am__append_44 = libpangowin32-$(PANGO_API_VERSION).la
subdir = pango
DIST_COMMON = $(am__pangoinclude_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/pango.rc.in \
	$(srcdir)/pangocairo.rc.in $(srcdir)/pangoft2.rc.in \
	$(srcdir)/pangowin32.rc.in $(srcdir)/pangox.rc.in \
	$(srcdir)/pangoxft.rc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = pango.rc pangoft2.rc pangowin32.rc pangocairo.rc \
	pangox.rc pangoxft.rc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(aliasdir)" "$(DESTDIR)$(girdir)" \
	"$(DESTDIR)$(typelibsdir)" "$(DESTDIR)$(pangoincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am_libpango_1_0_la_OBJECTS = break.lo ellipsize.lo fonts.lo \
	glyphstring.lo modules.lo pango-attributes.lo \
	pango-bidi-type.lo pango-color.lo pango-context.lo \
	pango-coverage.lo pango-engine.lo pango-fontmap.lo \
	pango-fontset.lo pango-glyph-item.lo pango-gravity.lo \
	pango-item.lo pango-language.lo pango-layout.lo \
	pango-markup.lo pango-matrix.lo pango-renderer.lo \
	pango-script.lo pango-tabs.lo pango-utils.lo reorder-items.lo \
	shape.lo pango-enum-types.lo module-defs-lang.lo
libpango_1_0_la_OBJECTS = $(am_libpango_1_0_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libpango_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpango_1_0_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am__DEPENDENCIES_2 =  \
#	libpangowin32-$(PANGO_API_VERSION).la \
#	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 =  \
	libpangoft2-$(PANGO_API_VERSION).la \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
am__libpangocairo_1_0_la_SOURCES_DIST = pangocairo-context.c \
	pangocairo-font.c pangocairo-fontmap.c pangocairo-render.c \
	pangocairo-private.h pangocairo-win32font.c \
	pangocairo-win32fontmap.c pangocairo-win32.h \
	pangocairo-fcfont.c pangocairo-fcfontmap.c pangocairo-fc.h \
	modules.h module-defs-coretext.c pangocoretext.h \
	pangocoretext.c pangocoretext-private.h \
	pangocoretext-fontmap.c pangocairo-coretext.h \
	pangocairo-coretextfont.c pangocairo-coretextfont.h \
	pangocairo-coretextfontmap.c module-defs-atsui.c pangoatsui.h \
	pangoatsui.c pangoatsui-private.h pangoatsui-fontmap.c \
	pangocairo-atsui.h pangocairo-atsuifont.c \
	pangocairo-atsuifont.h pangocairo-atsuifontmap.c
am__objects_1 = libpangocairo_1_0_la-pangocairo-context.lo \
	libpangocairo_1_0_la-pangocairo-font.lo \
	libpangocairo_1_0_la-pangocairo-fontmap.lo \
	libpangocairo_1_0_la-pangocairo-render.lo
#am__objects_2 = libpangocairo_1_0_la-pangocairo-win32font.lo \
#	libpangocairo_1_0_la-pangocairo-win32fontmap.lo
am__objects_3 = libpangocairo_1_0_la-pangocairo-fcfont.lo \
	libpangocairo_1_0_la-pangocairo-fcfontmap.lo
am__objects_4 = libpangocairo_1_0_la-module-defs-coretext.lo \
	libpangocairo_1_0_la-pangocoretext.lo \
	libpangocairo_1_0_la-pangocoretext-fontmap.lo \
	libpangocairo_1_0_la-pangocairo-coretextfont.lo \
	libpangocairo_1_0_la-pangocairo-coretextfontmap.lo
#am__objects_5 = libpangocairo_1_0_la-module-defs-atsui.lo \
#	libpangocairo_1_0_la-pangoatsui.lo \
#	libpangocairo_1_0_la-pangoatsui-fontmap.lo \
#	libpangocairo_1_0_la-pangocairo-atsuifont.lo \
#	libpangocairo_1_0_la-pangocairo-atsuifontmap.lo
am_libpangocairo_1_0_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5)
libpangocairo_1_0_la_OBJECTS = $(am_libpangocairo_1_0_la_OBJECTS)
libpangocairo_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) \
	$(libpangocairo_1_0_la_LDFLAGS) $(LDFLAGS) -o $@
am_libpangocairo_1_0_la_rpath = -rpath $(libdir)
am__objects_6 = pangofc-font.lo pangofc-fontmap.lo pangofc-decoder.lo \
	pangoft2.lo
am_libpangoft2_1_0_la_OBJECTS = $(am__objects_6) module-defs-fc.lo \
	pangoft2-fontmap.lo pangoft2-render.lo pango-ot-buffer.lo \
	pango-ot-info.lo pango-ot-ruleset.lo pango-ot-tag.lo
libpangoft2_1_0_la_OBJECTS = $(am_libpangoft2_1_0_la_OBJECTS)
libpangoft2_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangoft2_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libpangoft2_1_0_la_rpath = -rpath $(libdir)
am_libpangowin32_1_0_la_OBJECTS = module-defs-win32.lo pangowin32.lo \
	pangowin32-fontcache.lo pangowin32-fontmap.lo
libpangowin32_1_0_la_OBJECTS = $(am_libpangowin32_1_0_la_OBJECTS)
libpangowin32_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangowin32_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libpangowin32_1_0_la_rpath = -rpath $(libdir)
am__objects_7 = pangox.lo
am_libpangox_1_0_la_OBJECTS = $(am__objects_7) module-defs-x.lo \
	pangox-fontcache.lo pangox-fontmap.lo
libpangox_1_0_la_OBJECTS = $(am_libpangox_1_0_la_OBJECTS)
libpangox_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangox_1_0_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_libpangox_1_0_la_rpath = -rpath $(libdir)
am_libpangoxft_1_0_la_OBJECTS = pangoxft-font.lo pangoxft-fontmap.lo \
	pangoxft-render.lo
libpangoxft_1_0_la_OBJECTS = $(am_libpangoxft_1_0_la_OBJECTS)
libpangoxft_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangoxft_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libpangoxft_1_0_la_rpath = -rpath $(libdir)
PROGRAMS = $(bin_PROGRAMS)
am_pango_querymodules_OBJECTS = querymodules.$(OBJEXT)
pango_querymodules_OBJECTS = $(am_pango_querymodules_OBJECTS)
pango_querymodules_DEPENDENCIES = $(am__append_41) $(am__append_42) \
	$(am__append_43) $(am__append_44) \
	libpango-$(PANGO_API_VERSION).la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libpango_1_0_la_SOURCES) $(libpangocairo_1_0_la_SOURCES) \
	$(libpangoft2_1_0_la_SOURCES) $(libpangowin32_1_0_la_SOURCES) \
	$(libpangox_1_0_la_SOURCES) $(libpangoxft_1_0_la_SOURCES) \
	$(pango_querymodules_SOURCES)
DIST_SOURCES = $(libpango_1_0_la_SOURCES) \
	$(am__libpangocairo_1_0_la_SOURCES_DIST) \
	$(libpangoft2_1_0_la_SOURCES) $(libpangowin32_1_0_la_SOURCES) \
	$(libpangox_1_0_la_SOURCES) $(libpangoxft_1_0_la_SOURCES) \
	$(pango_querymodules_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(alias_DATA) $(gir_DATA) $(noinst_DATA) $(typelibs_DATA)
am__pangoinclude_HEADERS_DIST = pango.h pango-attributes.h \
	pango-bidi-type.h pango-break.h pango-context.h \
	pango-coverage.h pango-engine.h pango-font.h pango-fontmap.h \
	pango-fontset.h pango-glyph.h pango-glyph-item.h \
	pango-gravity.h pango-item.h pango-language.h pango-layout.h \
	pango-matrix.h pango-modules.h pango-renderer.h pango-script.h \
	pango-tabs.h pango-types.h pango-utils.h pango-features.h \
	pango-enum-types.h pangox.h pango-ot.h pangofc-font.h \
	pangofc-fontmap.h pangofc-decoder.h pangoft2.h pangoxft.h \
	pangoxft-render.h pangocairo.h pangocoretext.h pangoatsui.h \
	pangowin32.h
HEADERS = $(pangoinclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run aclocal-1.11 
AMTAR = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run automake-1.11
AWK = awk
CAIRO_CFLAGS = -I/Users/soegaard/BuildRacketLibs/include/cairo
CAIRO_LIBS = -lcairo
CAIRO_PREFIX = /Users/soegaard/BuildRacketLibs
CC = /usr/bin/gcc-4.2
CCDEPMODE = depmode=gcc3
CFLAGS = -Os -arch x86_64 -isysroot /Developer/SDKs/MacOSX10.5.sdk -I/Users/soegaard/BuildRacketLibs/include -Wall
CPP = /usr/bin/gcc-4.2 -E
CPPFLAGS = -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -I/Users/soegaard/BuildRacketLibs/include -fno-rtti -fno-exceptions
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FONTCONFIG_CFLAGS = -I/Users/soegaard/BuildRacketLibs/include -I/Users/soegaard/BuildRacketLibs/include/freetype2 -I/Users/soegaard/BuildRacketLibs/include -I/Users/soegaard/BuildRacketLibs/include/freetype2 -I/Users/soegaard/BuildRacketLibs/include 
FONTCONFIG_LIBS = -L/Users/soegaard/BuildRacketLibs/lib -lfontconfig -lfreetype 
FREETYPE_CFLAGS = -I/Users/soegaard/BuildRacketLibs/include/freetype2 -I/Users/soegaard/BuildRacketLibs/include  -I/Users/soegaard/BuildRacketLibs/include -I/Users/soegaard/BuildRacketLibs/include/freetype2 -I/Users/soegaard/BuildRacketLibs/include -I/Users/soegaard/BuildRacketLibs/include/freetype2 -I/Users/soegaard/BuildRacketLibs/include 
FREETYPE_LIBS = -L/Users/soegaard/BuildRacketLibs/lib -lfreetype  -L/Users/soegaard/BuildRacketLibs/lib -lfontconfig -lfreetype 
GLIB_CFLAGS = -D_REENTRANT -I/Users/soegaard/BuildRacketLibs/include/glib-2.0 -I/Users/soegaard/BuildRacketLibs/lib/glib-2.0/include 
GLIB_LIBS = -L/Users/soegaard/BuildRacketLibs/lib -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl 
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /Users/soegaard/BuildRacketLibs
GREP = /usr/bin/grep
GTKDOC_CHECK = /opt/local/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = /opt/local/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /opt/local/bin/gtkdoc-rebase
HTML_DIR = ${datadir}/gtk-doc/html
INCLUDED_ATSUI_MODULES =  $(top_builddir)/modules/basic/libpango-basic-atsui.la
INCLUDED_CORE_TEXT_MODULES =  $(top_builddir)/modules/basic/libpango-basic-coretext.la
INCLUDED_FC_MODULES =  $(top_builddir)/modules/arabic/libpango-arabic-fc.la $(top_builddir)/modules/basic/libpango-basic-fc.la $(top_builddir)/modules/hangul/libpango-hangul-fc.la $(top_builddir)/modules/hebrew/libpango-hebrew-fc.la $(top_builddir)/modules/indic/libpango-indic-fc.la $(top_builddir)/modules/khmer/libpango-khmer-fc.la $(top_builddir)/modules/syriac/libpango-syriac-fc.la $(top_builddir)/modules/thai/libpango-thai-fc.la $(top_builddir)/modules/tibetan/libpango-tibetan-fc.la
INCLUDED_LANG_MODULES =  $(top_builddir)/modules/arabic/libpango-arabic-lang.la $(top_builddir)/modules/indic/libpango-indic-lang.la
INCLUDED_WIN32_MODULES =  $(top_builddir)/modules/basic/libpango-basic-win32.la
INCLUDED_X_MODULES =  $(top_builddir)/modules/basic/libpango-basic-x.la
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LD = /usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDFLAGS =    -arch x86_64 -isysroot /Developer/SDKs/MacOSX10.5.sdk -L/Users/soegaard/BuildRacketLibs/lib
LIBOBJS = 
LIBRARY_LIBTOOL_OPTIONS = -version-info 2905:0:2905 -export-symbols-regex "^pango_.*"
LIBS = 
LIBTHAI_CFLAGS = 
LIBTHAI_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXE_MACHINE_FLAG = 
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
MODULE_LIBTOOL_OPTIONS = -export-dynamic -avoid-version -export-symbols-regex "^script_engine_.*"
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = pango
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=pango
PACKAGE_NAME = pango
PACKAGE_STRING = pango 1.29.5
PACKAGE_TARNAME = pango
PACKAGE_URL = 
PACKAGE_VERSION = 1.29.5
PANGO_API_VERSION = 1.0
PANGO_BINARY_AGE = 2905
PANGO_CURRENT_MINUS_AGE = 0
PANGO_DEBUG_FLAGS = -DPANGO_ENABLE_DEBUG
PANGO_INTERFACE_AGE = 0
PANGO_MODULE_VERSION = 1.6.0
PANGO_VERSION = 1.29.5
PANGO_VERSION_MAJOR = 1
PANGO_VERSION_MICRO = 5
PANGO_VERSION_MINOR = 29
PATH_SEPARATOR = :
PKGCONFIG_CAIRO_REQUIRES = 
PKGCONFIG_MATH_LIBS = 
PKG_CONFIG = /Users/soegaard/BuildRacketLibs/bin/pkg-config
PKG_CONFIG_LIBDIR = /Users/soegaard/BuildRacketLibs/lib/pkg-config
PKG_CONFIG_PATH = /Users/soegaard/BuildRacketLibs/lib/pkgconfig
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.29.5
WIN32_LIBS = 
WINDRES = 
XFT_CFLAGS = 
XFT_LIBS = 
XMKMF = 
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /Users/soegaard/BuildRacketLibs/pango/pango
abs_srcdir = /Users/soegaard/BuildRacketLibs/pango/pango
abs_top_builddir = /Users/soegaard/BuildRacketLibs/pango
abs_top_srcdir = /Users/soegaard/BuildRacketLibs/pango
ac_ct_AR = ar
ac_ct_CC = /usr/bin/gcc-4.2
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin13.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin13.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin13.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin13.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/soegaard/BuildRacketLibs/pango/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/soegaard/BuildRacketLibs
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# We set GPATH here; this gives us semantics for GNU make
# which are more like other make's VPATH.
GPATH = $(srcdir)
INTROSPECTION_GIRS = Pango-1.0.gir $(am__append_9) $(am__append_14) \
	$(am__append_19)
INTROSPECTION_SCANNER_ARGS = --warn-all --add-include-path=$(srcdir) --add-include-path=.
INTROSPECTION_COMPILER_ARGS = --includedir=$(srcdir) --includedir=.
OPENTYPE_SUBDIR = opentype
FRIBIDI_SUBDIR = mini-fribidi
SUBDIRS = $(OPENTYPE_SUBDIR) $(FRIBIDI_SUBDIR)
DIST_SUBDIRS = mini-fribidi opentype
INCLUDES = \
	-DG_LOG_DOMAIN=\"Pango\"			\
	-DPANGO_ENABLE_BACKEND				\
	-DPANGO_ENABLE_ENGINE				\
	-DSYSCONFDIR=\"$(sysconfdir)\"			\
	-DLIBDIR=\"$(libdir)\"				\
	-I$(top_srcdir)					\
	-I$(top_builddir)				\
	$(PANGO_DEBUG_FLAGS)				\
	$(GLIB_CFLAGS)					\
	$(XFT_CFLAGS)					\
	$(CAIRO_CFLAGS)					\
	$(FREETYPE_CFLAGS)				\
	$(X_CFLAGS)

BUILT_SOURCES = pango-enum-types.h pango-enum-types.c pango-features.h
pangoincludedir = $(includedir)/pango-1.0/pango
libm = -lm

# ------------------- libpango -------------------
lib_LTLIBRARIES = libpango-1.0.la $(am__append_4) $(am__append_8) \
	$(am__append_13) $(am__append_18) $(am__append_37)
libpango_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) $(am__append_1)
libpango_1_0_la_LIBADD = $(GLIB_LIBS) $(libm) $(INCLUDED_LANG_MODULES) \
	mini-fribidi/libmini-fribidi.la
libpango_1_0_la_DEPENDENCIES = $(INCLUDED_LANG_MODULES) \
	mini-fribidi/libmini-fribidi.la $(am__append_2)
libpango_1_0_la_SOURCES = \
	break.c					\
	ellipsize.c				\
	fonts.c					\
	glyphstring.c				\
	modules.c				\
	pango-attributes.c			\
	pango-bidi-type.c			\
	pango-color.c				\
	pango-color-table.h			\
	pango-context.c				\
	pango-coverage.c			\
	pango-engine.c				\
	pango-engine-private.h			\
	pango-fontmap.c				\
	pango-fontset.c				\
	pango-glyph-item.c			\
	pango-gravity.c				\
	pango-impl-utils.h			\
	pango-item.c				\
	pango-language.c			\
	pango-language-sample-table.h		\
	pango-layout.c				\
	pango-layout-private.h			\
	pango-markup.c				\
	pango-matrix.c				\
	pango-renderer.c			\
	pango-script.c				\
	pango-script-lang-table.h		\
	pango-script-private.h				\
	pango-tabs.c				\
	pango-utils.c				\
	reorder-items.c				\
	shape.c					\
	pango-enum-types.c			\
	module-defs-lang.c

pango_headers = \
	pango.h		   \
	pango-attributes.h \
	pango-bidi-type.h  \
	pango-break.h	   \
	pango-context.h	   \
	pango-coverage.h   \
	pango-engine.h	   \
	pango-font.h       \
	pango-fontmap.h	   \
	pango-fontset.h    \
	pango-glyph.h	   \
	pango-glyph-item.h \
	pango-gravity.h    \
	pango-item.h	   \
	pango-language.h   \
	pango-layout.h	   \
	pango-matrix.h     \
	pango-modules.h	   \
	pango-renderer.h   \
	pango-script.h	   \
	pango-tabs.h	   \
	pango-types.h	   \
	pango-utils.h

pangoinclude_HEADERS = $(pango_headers) pango-features.h \
	pango-enum-types.h $(am__append_3) $(am__append_7) \
	$(am__append_12) $(am__append_17) $(am__append_29) \
	$(am__append_33) $(am__append_36)
pango_introspection_files = \
        $(libpango_1_0_la_SOURCES) \
	    $(pango_headers) \
	    pango-enum-types.h

Pango_1_0_gir_PACKAGES = gobject-2.0 cairo freetype2
Pango_1_0_gir_EXPORT_PACKAGES = pango
Pango_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
Pango_1_0_gir_LIBS = libpango-1.0.la
Pango_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir) $(PANGO_CFLAGS)
Pango_1_0_gir_FILES = $(filter-out %-private.h pango-color-table.h, $(pango_introspection_files))
Pango_1_0_gir_SCANNERFLAGS = --c-include "pango/pango.h"
#aliasdir = $(sysconfdir)/pango
#alias_DATA = pangox.aliases
pangox_headers = pangox.h
pangox_public_sources = pangox.c
libpangox_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) $(am__append_5)
libpangox_1_0_la_LIBADD = \
	libpango-$(PANGO_API_VERSION).la	\
	$(INCLUDED_X_MODULES)			\
	$(GLIB_LIBS)				\
	$(X_LIBS)				\
	$(X_EXTRA_LIBS)

libpangox_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(INCLUDED_X_MODULES) $(am__append_6)
libpangox_1_0_la_SOURCES = \
	$(pangox_public_sources) 		\
	modules.h 	   			\
	module-defs-x.c	   			\
	pangox-private.h   			\
	pangox-fontcache.c 			\
	pangox-fontmap.c

pangoft2_headers = \
	pango-ot.h		\
	pangofc-font.h		\
	pangofc-fontmap.h	\
	pangofc-decoder.h	\
	pangoft2.h

pangoft2_public_sources = \
	pangofc-font.c	   	\
	pangofc-fontmap.c	\
	pangofc-decoder.c	\
	pangoft2.c

libpangoft2_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_10)
libpangoft2_1_0_la_LIBADD = \
	opentype/libharfbuzz.la			\
	libpango-$(PANGO_API_VERSION).la	\
	$(INCLUDED_FC_MODULES)			\
	$(GLIB_LIBS)				\
	$(FREETYPE_LIBS)			\
	$(libm)

libpangoft2_1_0_la_DEPENDENCIES = opentype/libharfbuzz.la \
	libpango-$(PANGO_API_VERSION).la $(INCLUDED_FC_MODULES) \
	$(am__append_11)
libpangoft2_1_0_la_SOURCES = \
	$(pangoft2_public_sources) \
	modules.h		\
	module-defs-fc.c	\
	pangofc-private.h	\
	pangoft2.h		\
	pangoft2-private.h	\
	pangoft2-fontmap.c	\
	pangoft2-render.c	\
	pango-ot-private.h	\
	pango-ot-buffer.c	\
	pango-ot-info.c		\
	pango-ot-ruleset.c      \
	pango-ot-tag.c

pangoft2_introspection_files = \
        $(pangoft2_headers) \
        $(pangoft2_public_sources)

PangoFT2_1_0_gir_PACKAGES = freetype2
PangoFT2_1_0_gir_EXPORT_PACKAGES = pangoft2
PangoFT2_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0 freetype2-2.0 fontconfig-2.0
PangoFT2_1_0_gir_LIBS = libpangoft2-1.0.la
PangoFT2_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir)
PangoFT2_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --c-include "pango/pangoft2.h"
PangoFT2_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangoft2_introspection_files)))
pangoxft_headers = pangoxft.h pangoxft-render.h
libpangoxft_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_15)
libpangoxft_1_0_la_LIBADD = \
	libpangoft2-$(PANGO_API_VERSION).la	\
	libpango-$(PANGO_API_VERSION).la	\
	$(GLIB_LIBS)				\
	$(X_LIBS)				\
	$(XFT_LIBS)				\
	$(FREETYPE_LIBS)			\
	$(libm)

libpangoxft_1_0_la_DEPENDENCIES = libpangoft2-$(PANGO_API_VERSION).la \
	libpango-$(PANGO_API_VERSION).la $(am__append_16)
libpangoxft_1_0_la_SOURCES = \
	pangoxft-font.c		\
	pangoxft-fontmap.c      \
	pangoxft-private.h	\
	pangoxft-render.c

pangoxft_introspection_files = \
    $(pangoxft_headers) \
    $(libpangoxft_1_0_la_SOURCES)

PangoXft_1_0_gir_PACKAGES = gobject-2.0 freetype2
PangoXft_1_0_gir_EXPORT_PACKAGES = pangoxft
PangoXft_1_0_gir_INCLUDES = GObject-2.0 xft-2.0 xlib-2.0
PangoXft_1_0_gir_LIBS = libpangoxft-1.0.la
PangoXft_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir) $(PANGO_CFLAGS)
PangoXft_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --include-uninstalled=$(builddir)/PangoFT2-1.0.gir --c-include "pango/pangoxft.h"
PangoXft_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangoxft_introspection_files)))
pangocairo_headers = pangocairo.h
libpangocairo_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_20) $(am__append_30) $(am__append_34)
libpangocairo_1_0_la_LIBADD = libpango-$(PANGO_API_VERSION).la \
	$(GLIB_LIBS) $(CAIRO_LIBS) $(libm) $(am__append_22) \
	$(am__append_25) $(am__append_31) $(am__append_35)
libpangocairo_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(am__append_21) $(am__append_23) $(am__append_26)
pangocairo_core_sources = \
	pangocairo-context.c    \
	pangocairo-font.c	\
	pangocairo-fontmap.c    \
	pangocairo-render.c	\
	pangocairo-private.h

libpangocairo_1_0_la_SOURCES = $(pangocairo_core_sources) \
	$(am__append_24) $(am__append_27) $(am__append_28) \
	$(am__append_32)
# We don't have an ATSUI GIR right now, so this is just hypothetical
#PANGOCAIRO_FONT_BACKEND_GI_MODULE = PangoATSUI-1.0
# We don't have an CoreText GIR right now, so this is just hypothetical
PANGOCAIRO_FONT_BACKEND_GI_MODULE = PangoCoreText-1.0
PANGOCAIRO_FONT_BACKEND_GI_MODULE = PangoFT2-1.0
#libpangocairo_1_0_la_CFLAGS = -xobjective-c
pangocairo_introspection_files = \
    $(libpangocairo_1_0_la_SOURCES) \
    $(pangocairo_headers)

PangoCairo_1_0_gir_PACKAGES = gobject-2.0 cairo
PangoCairo_1_0_gir_EXPORT_PACKAGES = pangocairo
PangoCairo_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
PangoCairo_1_0_gir_LIBS = libpangocairo-1.0.la
PangoCairo_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir) $(PANGO_CFLAGS)
PangoCairo_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --include-uninstalled=$(builddir)/$(PANGOCAIRO_FONT_BACKEND_GI_MODULE).gir --c-include "pango/pangocairo.h"
PangoCairo_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangocairo_introspection_files)))
libpangowin32_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_38)
libpangowin32_1_0_la_LIBADD = \
	libpango-$(PANGO_API_VERSION).la	\
	$(INCLUDED_WIN32_MODULES)		\
	$(GLIB_LIBS)				\
	$(WIN32_LIBS)

libpangowin32_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(INCLUDED_WIN32_MODULES) $(am__append_39)
libpangowin32_1_0_la_SOURCES = \
	modules.h		\
	module-defs-win32.c	\
	pangowin32.h		\
	pangowin32.c		\
	pangowin32-private.h	\
	pangowin32-fontcache.c	\
	pangowin32-fontmap.c

#MS_LIB_FILES = pango-$(PANGO_API_VERSION).lib \
#	pangowin32-$(PANGO_API_VERSION).lib \
#	pangocairo-$(PANGO_API_VERSION).lib \
#	$(am__append_40)
#noinst_DATA = $(MS_LIB_FILES)

# ------------------- introspection -------------------
#girdir = $(datadir)/gir-1.0
#gir_DATA = $(INTROSPECTION_GIRS)
#typelibsdir = $(libdir)/girepository-1.0
#typelibs_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)

#
# As a temporary hack, we pull in libpangox here so that we can link
#
pango_querymodules_SOURCES = \
	querymodules.c

pango_querymodules_LDADD = $(am__append_41) $(am__append_42) \
	$(am__append_43) $(am__append_44) \
	libpango-$(PANGO_API_VERSION).la $(GLIB_LIBS)
EXTRA_DIST = \
	pango-enum-types.h			\
	module-defs.h				\
	module-defs.h.win32			\
	module-defs-lang.c.win32		\
	module-defs-fc.c.win32			\
	module-defs-win32.c.win32		\
	pango.def				\
	pangocairo.def				\
	pangowin32.def				\
	pangoft2.def				\
	makefile.msc				\
	pango.rc				\
	pango.rc.in				\
	pangox.aliases				\
	pangoft2.rc				\
	pangoft2.rc.in				\
	pangowin32.rc				\
	pangowin32.rc.in			\
	pangocairo.rc				\
	pangocairo.rc.in			\
	pangox.rc				\
	pangox.rc.in				\
	pangoxft.rc				\
	pangoxft.rc.in				\
	check.defs

MODULE_DEF_FILES = \
	module-defs.h \
	module-defs-lang.c \
	module-defs-x.c \
	module-defs-fc.c \
	module-defs-win32.c \
	module-defs-atsui.c \
	module-defs-coretext.c

CLEANFILES = \
	pango-enum-types.h	\
	s-enum-types-h		\
	pango-enum-types.c	\
	s-enum-types-c      \
    $(INTROSPECTION_GIRS) \
    $(INTROSPECTION_GIRS:.gir=.typelib)

MOSTLYCLEANFILES = \
	*.list			\
	*.expected

DISTCLEANFILES = pango-features.h $(MODULE_DEF_FILES) \
	../build/win32/vs9/pango.vcproj \
	../build/win32/vs9/pangoft2.vcproj \
	../build/win32/vs9/pangocairo.vcproj \
	../build/win32/vs10/pango.vcxproj \
	../build/win32/vs10/pango.vcxproj.filters \
	../build/win32/vs10/pangocairo.vcxproj \
	../build/win32/vs10/pangocairo.vcxproj.filters \
	../build/win32/vs10/pangocairo_fc.vcxproj \
	../build/win32/vs10/pangocairo_fc.vcxproj.filters \
	../build/win32/vs10/pangoft2.vcxproj \
	../build/win32/vs10/pangoft2.vcxproj.filters \
	libpangocairo.vs10.sourcefiles.filters \
	libpangocairo.vs10.sourcefiles \
	libpangoft2.vs10.sourcefiles.filters \
	libpangoft2.vs10.sourcefiles libpango.vs10.sourcefiles \
	libpango.vs10.sourcefiles
TESTS = check.defs
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits pango/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits pango/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
pango.rc: $(top_builddir)/config.status $(srcdir)/pango.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangoft2.rc: $(top_builddir)/config.status $(srcdir)/pangoft2.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangowin32.rc: $(top_builddir)/config.status $(srcdir)/pangowin32.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangocairo.rc: $(top_builddir)/config.status $(srcdir)/pangocairo.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangox.rc: $(top_builddir)/config.status $(srcdir)/pangox.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangoxft.rc: $(top_builddir)/config.status $(srcdir)/pangoxft.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libpango-1.0.la: $(libpango_1_0_la_OBJECTS) $(libpango_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpango_1_0_la_LINK) -rpath $(libdir) $(libpango_1_0_la_OBJECTS) $(libpango_1_0_la_LIBADD) $(LIBS)
libpangocairo-1.0.la: $(libpangocairo_1_0_la_OBJECTS) $(libpangocairo_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangocairo_1_0_la_LINK) $(am_libpangocairo_1_0_la_rpath) $(libpangocairo_1_0_la_OBJECTS) $(libpangocairo_1_0_la_LIBADD) $(LIBS)
libpangoft2-1.0.la: $(libpangoft2_1_0_la_OBJECTS) $(libpangoft2_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangoft2_1_0_la_LINK) $(am_libpangoft2_1_0_la_rpath) $(libpangoft2_1_0_la_OBJECTS) $(libpangoft2_1_0_la_LIBADD) $(LIBS)
libpangowin32-1.0.la: $(libpangowin32_1_0_la_OBJECTS) $(libpangowin32_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangowin32_1_0_la_LINK) $(am_libpangowin32_1_0_la_rpath) $(libpangowin32_1_0_la_OBJECTS) $(libpangowin32_1_0_la_LIBADD) $(LIBS)
libpangox-1.0.la: $(libpangox_1_0_la_OBJECTS) $(libpangox_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangox_1_0_la_LINK) $(am_libpangox_1_0_la_rpath) $(libpangox_1_0_la_OBJECTS) $(libpangox_1_0_la_LIBADD) $(LIBS)
libpangoxft-1.0.la: $(libpangoxft_1_0_la_OBJECTS) $(libpangoxft_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangoxft_1_0_la_LINK) $(am_libpangoxft_1_0_la_rpath) $(libpangoxft_1_0_la_OBJECTS) $(libpangoxft_1_0_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad
pango-querymodules$(EXEEXT): $(pango_querymodules_OBJECTS) $(pango_querymodules_DEPENDENCIES) 
	@rm -f pango-querymodules$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pango_querymodules_OBJECTS) $(pango_querymodules_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/break.Plo
include ./$(DEPDIR)/ellipsize.Plo
include ./$(DEPDIR)/fonts.Plo
include ./$(DEPDIR)/glyphstring.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-module-defs-atsui.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-module-defs-coretext.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangoatsui-fontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangoatsui.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifont.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-context.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfont.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfont.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-font.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-fontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-render.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32font.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32fontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocoretext-fontmap.Plo
include ./$(DEPDIR)/libpangocairo_1_0_la-pangocoretext.Plo
include ./$(DEPDIR)/module-defs-fc.Plo
include ./$(DEPDIR)/module-defs-lang.Plo
include ./$(DEPDIR)/module-defs-win32.Plo
include ./$(DEPDIR)/module-defs-x.Plo
include ./$(DEPDIR)/modules.Plo
include ./$(DEPDIR)/pango-attributes.Plo
include ./$(DEPDIR)/pango-bidi-type.Plo
include ./$(DEPDIR)/pango-color.Plo
include ./$(DEPDIR)/pango-context.Plo
include ./$(DEPDIR)/pango-coverage.Plo
include ./$(DEPDIR)/pango-engine.Plo
include ./$(DEPDIR)/pango-enum-types.Plo
include ./$(DEPDIR)/pango-fontmap.Plo
include ./$(DEPDIR)/pango-fontset.Plo
include ./$(DEPDIR)/pango-glyph-item.Plo
include ./$(DEPDIR)/pango-gravity.Plo
include ./$(DEPDIR)/pango-item.Plo
include ./$(DEPDIR)/pango-language.Plo
include ./$(DEPDIR)/pango-layout.Plo
include ./$(DEPDIR)/pango-markup.Plo
include ./$(DEPDIR)/pango-matrix.Plo
include ./$(DEPDIR)/pango-ot-buffer.Plo
include ./$(DEPDIR)/pango-ot-info.Plo
include ./$(DEPDIR)/pango-ot-ruleset.Plo
include ./$(DEPDIR)/pango-ot-tag.Plo
include ./$(DEPDIR)/pango-renderer.Plo
include ./$(DEPDIR)/pango-script.Plo
include ./$(DEPDIR)/pango-tabs.Plo
include ./$(DEPDIR)/pango-utils.Plo
include ./$(DEPDIR)/pangofc-decoder.Plo
include ./$(DEPDIR)/pangofc-font.Plo
include ./$(DEPDIR)/pangofc-fontmap.Plo
include ./$(DEPDIR)/pangoft2-fontmap.Plo
include ./$(DEPDIR)/pangoft2-render.Plo
include ./$(DEPDIR)/pangoft2.Plo
include ./$(DEPDIR)/pangowin32-fontcache.Plo
include ./$(DEPDIR)/pangowin32-fontmap.Plo
include ./$(DEPDIR)/pangowin32.Plo
include ./$(DEPDIR)/pangox-fontcache.Plo
include ./$(DEPDIR)/pangox-fontmap.Plo
include ./$(DEPDIR)/pangox.Plo
include ./$(DEPDIR)/pangoxft-font.Plo
include ./$(DEPDIR)/pangoxft-fontmap.Plo
include ./$(DEPDIR)/pangoxft-render.Plo
include ./$(DEPDIR)/querymodules.Po
include ./$(DEPDIR)/reorder-items.Plo
include ./$(DEPDIR)/shape.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libpangocairo_1_0_la-pangocairo-context.lo: pangocairo-context.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-context.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-context.Tpo -c -o libpangocairo_1_0_la-pangocairo-context.lo `test -f 'pangocairo-context.c' || echo '$(srcdir)/'`pangocairo-context.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-context.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-context.Plo
#	$(AM_V_CC) \
#	source='pangocairo-context.c' object='libpangocairo_1_0_la-pangocairo-context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-context.lo `test -f 'pangocairo-context.c' || echo '$(srcdir)/'`pangocairo-context.c

libpangocairo_1_0_la-pangocairo-font.lo: pangocairo-font.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-font.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-font.Tpo -c -o libpangocairo_1_0_la-pangocairo-font.lo `test -f 'pangocairo-font.c' || echo '$(srcdir)/'`pangocairo-font.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-font.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-font.Plo
#	$(AM_V_CC) \
#	source='pangocairo-font.c' object='libpangocairo_1_0_la-pangocairo-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-font.lo `test -f 'pangocairo-font.c' || echo '$(srcdir)/'`pangocairo-font.c

libpangocairo_1_0_la-pangocairo-fontmap.lo: pangocairo-fontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-fontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fontmap.Tpo -c -o libpangocairo_1_0_la-pangocairo-fontmap.lo `test -f 'pangocairo-fontmap.c' || echo '$(srcdir)/'`pangocairo-fontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fontmap.Plo
#	$(AM_V_CC) \
#	source='pangocairo-fontmap.c' object='libpangocairo_1_0_la-pangocairo-fontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-fontmap.lo `test -f 'pangocairo-fontmap.c' || echo '$(srcdir)/'`pangocairo-fontmap.c

libpangocairo_1_0_la-pangocairo-render.lo: pangocairo-render.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-render.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-render.Tpo -c -o libpangocairo_1_0_la-pangocairo-render.lo `test -f 'pangocairo-render.c' || echo '$(srcdir)/'`pangocairo-render.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-render.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-render.Plo
#	$(AM_V_CC) \
#	source='pangocairo-render.c' object='libpangocairo_1_0_la-pangocairo-render.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-render.lo `test -f 'pangocairo-render.c' || echo '$(srcdir)/'`pangocairo-render.c

libpangocairo_1_0_la-pangocairo-win32font.lo: pangocairo-win32font.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-win32font.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32font.Tpo -c -o libpangocairo_1_0_la-pangocairo-win32font.lo `test -f 'pangocairo-win32font.c' || echo '$(srcdir)/'`pangocairo-win32font.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32font.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32font.Plo
#	$(AM_V_CC) \
#	source='pangocairo-win32font.c' object='libpangocairo_1_0_la-pangocairo-win32font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-win32font.lo `test -f 'pangocairo-win32font.c' || echo '$(srcdir)/'`pangocairo-win32font.c

libpangocairo_1_0_la-pangocairo-win32fontmap.lo: pangocairo-win32fontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-win32fontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32fontmap.Tpo -c -o libpangocairo_1_0_la-pangocairo-win32fontmap.lo `test -f 'pangocairo-win32fontmap.c' || echo '$(srcdir)/'`pangocairo-win32fontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32fontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-win32fontmap.Plo
#	$(AM_V_CC) \
#	source='pangocairo-win32fontmap.c' object='libpangocairo_1_0_la-pangocairo-win32fontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-win32fontmap.lo `test -f 'pangocairo-win32fontmap.c' || echo '$(srcdir)/'`pangocairo-win32fontmap.c

libpangocairo_1_0_la-pangocairo-fcfont.lo: pangocairo-fcfont.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-fcfont.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfont.Tpo -c -o libpangocairo_1_0_la-pangocairo-fcfont.lo `test -f 'pangocairo-fcfont.c' || echo '$(srcdir)/'`pangocairo-fcfont.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfont.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfont.Plo
#	$(AM_V_CC) \
#	source='pangocairo-fcfont.c' object='libpangocairo_1_0_la-pangocairo-fcfont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-fcfont.lo `test -f 'pangocairo-fcfont.c' || echo '$(srcdir)/'`pangocairo-fcfont.c

libpangocairo_1_0_la-pangocairo-fcfontmap.lo: pangocairo-fcfontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-fcfontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfontmap.Tpo -c -o libpangocairo_1_0_la-pangocairo-fcfontmap.lo `test -f 'pangocairo-fcfontmap.c' || echo '$(srcdir)/'`pangocairo-fcfontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-fcfontmap.Plo
#	$(AM_V_CC) \
#	source='pangocairo-fcfontmap.c' object='libpangocairo_1_0_la-pangocairo-fcfontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-fcfontmap.lo `test -f 'pangocairo-fcfontmap.c' || echo '$(srcdir)/'`pangocairo-fcfontmap.c

libpangocairo_1_0_la-module-defs-coretext.lo: module-defs-coretext.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-module-defs-coretext.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-module-defs-coretext.Tpo -c -o libpangocairo_1_0_la-module-defs-coretext.lo `test -f 'module-defs-coretext.c' || echo '$(srcdir)/'`module-defs-coretext.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-module-defs-coretext.Tpo $(DEPDIR)/libpangocairo_1_0_la-module-defs-coretext.Plo
#	$(AM_V_CC) \
#	source='module-defs-coretext.c' object='libpangocairo_1_0_la-module-defs-coretext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-module-defs-coretext.lo `test -f 'module-defs-coretext.c' || echo '$(srcdir)/'`module-defs-coretext.c

libpangocairo_1_0_la-pangocoretext.lo: pangocoretext.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocoretext.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocoretext.Tpo -c -o libpangocairo_1_0_la-pangocoretext.lo `test -f 'pangocoretext.c' || echo '$(srcdir)/'`pangocoretext.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocoretext.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocoretext.Plo
#	$(AM_V_CC) \
#	source='pangocoretext.c' object='libpangocairo_1_0_la-pangocoretext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocoretext.lo `test -f 'pangocoretext.c' || echo '$(srcdir)/'`pangocoretext.c

libpangocairo_1_0_la-pangocoretext-fontmap.lo: pangocoretext-fontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocoretext-fontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocoretext-fontmap.Tpo -c -o libpangocairo_1_0_la-pangocoretext-fontmap.lo `test -f 'pangocoretext-fontmap.c' || echo '$(srcdir)/'`pangocoretext-fontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocoretext-fontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocoretext-fontmap.Plo
#	$(AM_V_CC) \
#	source='pangocoretext-fontmap.c' object='libpangocairo_1_0_la-pangocoretext-fontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocoretext-fontmap.lo `test -f 'pangocoretext-fontmap.c' || echo '$(srcdir)/'`pangocoretext-fontmap.c

libpangocairo_1_0_la-pangocairo-coretextfont.lo: pangocairo-coretextfont.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-coretextfont.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfont.Tpo -c -o libpangocairo_1_0_la-pangocairo-coretextfont.lo `test -f 'pangocairo-coretextfont.c' || echo '$(srcdir)/'`pangocairo-coretextfont.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfont.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfont.Plo
#	$(AM_V_CC) \
#	source='pangocairo-coretextfont.c' object='libpangocairo_1_0_la-pangocairo-coretextfont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-coretextfont.lo `test -f 'pangocairo-coretextfont.c' || echo '$(srcdir)/'`pangocairo-coretextfont.c

libpangocairo_1_0_la-pangocairo-coretextfontmap.lo: pangocairo-coretextfontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-coretextfontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfontmap.Tpo -c -o libpangocairo_1_0_la-pangocairo-coretextfontmap.lo `test -f 'pangocairo-coretextfontmap.c' || echo '$(srcdir)/'`pangocairo-coretextfontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-coretextfontmap.Plo
#	$(AM_V_CC) \
#	source='pangocairo-coretextfontmap.c' object='libpangocairo_1_0_la-pangocairo-coretextfontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-coretextfontmap.lo `test -f 'pangocairo-coretextfontmap.c' || echo '$(srcdir)/'`pangocairo-coretextfontmap.c

libpangocairo_1_0_la-module-defs-atsui.lo: module-defs-atsui.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-module-defs-atsui.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-module-defs-atsui.Tpo -c -o libpangocairo_1_0_la-module-defs-atsui.lo `test -f 'module-defs-atsui.c' || echo '$(srcdir)/'`module-defs-atsui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-module-defs-atsui.Tpo $(DEPDIR)/libpangocairo_1_0_la-module-defs-atsui.Plo
#	$(AM_V_CC) \
#	source='module-defs-atsui.c' object='libpangocairo_1_0_la-module-defs-atsui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-module-defs-atsui.lo `test -f 'module-defs-atsui.c' || echo '$(srcdir)/'`module-defs-atsui.c

libpangocairo_1_0_la-pangoatsui.lo: pangoatsui.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangoatsui.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangoatsui.Tpo -c -o libpangocairo_1_0_la-pangoatsui.lo `test -f 'pangoatsui.c' || echo '$(srcdir)/'`pangoatsui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangoatsui.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangoatsui.Plo
#	$(AM_V_CC) \
#	source='pangoatsui.c' object='libpangocairo_1_0_la-pangoatsui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangoatsui.lo `test -f 'pangoatsui.c' || echo '$(srcdir)/'`pangoatsui.c

libpangocairo_1_0_la-pangoatsui-fontmap.lo: pangoatsui-fontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangoatsui-fontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangoatsui-fontmap.Tpo -c -o libpangocairo_1_0_la-pangoatsui-fontmap.lo `test -f 'pangoatsui-fontmap.c' || echo '$(srcdir)/'`pangoatsui-fontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangoatsui-fontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangoatsui-fontmap.Plo
#	$(AM_V_CC) \
#	source='pangoatsui-fontmap.c' object='libpangocairo_1_0_la-pangoatsui-fontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangoatsui-fontmap.lo `test -f 'pangoatsui-fontmap.c' || echo '$(srcdir)/'`pangoatsui-fontmap.c

libpangocairo_1_0_la-pangocairo-atsuifont.lo: pangocairo-atsuifont.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-atsuifont.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifont.Tpo -c -o libpangocairo_1_0_la-pangocairo-atsuifont.lo `test -f 'pangocairo-atsuifont.c' || echo '$(srcdir)/'`pangocairo-atsuifont.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifont.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifont.Plo
#	$(AM_V_CC) \
#	source='pangocairo-atsuifont.c' object='libpangocairo_1_0_la-pangocairo-atsuifont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-atsuifont.lo `test -f 'pangocairo-atsuifont.c' || echo '$(srcdir)/'`pangocairo-atsuifont.c

libpangocairo_1_0_la-pangocairo-atsuifontmap.lo: pangocairo-atsuifontmap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -MT libpangocairo_1_0_la-pangocairo-atsuifontmap.lo -MD -MP -MF $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifontmap.Tpo -c -o libpangocairo_1_0_la-pangocairo-atsuifontmap.lo `test -f 'pangocairo-atsuifontmap.c' || echo '$(srcdir)/'`pangocairo-atsuifontmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifontmap.Tpo $(DEPDIR)/libpangocairo_1_0_la-pangocairo-atsuifontmap.Plo
#	$(AM_V_CC) \
#	source='pangocairo-atsuifontmap.c' object='libpangocairo_1_0_la-pangocairo-atsuifontmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpangocairo_1_0_la_CFLAGS) $(CFLAGS) -c -o libpangocairo_1_0_la-pangocairo-atsuifontmap.lo `test -f 'pangocairo-atsuifontmap.c' || echo '$(srcdir)/'`pangocairo-atsuifontmap.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-aliasDATA: $(alias_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(aliasdir)" || $(MKDIR_P) "$(DESTDIR)$(aliasdir)"
	@list='$(alias_DATA)'; test -n "$(aliasdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(aliasdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(aliasdir)" || exit $$?; \
	done

uninstall-aliasDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(alias_DATA)'; test -n "$(aliasdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(aliasdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(aliasdir)" && rm -f $$files
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(girdir)" || $(MKDIR_P) "$(DESTDIR)$(girdir)"
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(girdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(girdir)" && rm -f $$files
install-typelibsDATA: $(typelibs_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(typelibsdir)" || $(MKDIR_P) "$(DESTDIR)$(typelibsdir)"
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibsdir)" || exit $$?; \
	done

uninstall-typelibsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(typelibsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(typelibsdir)" && rm -f $$files
install-pangoincludeHEADERS: $(pangoinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pangoincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pangoincludedir)"
	@list='$(pangoinclude_HEADERS)'; test -n "$(pangoincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pangoincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pangoincludedir)" || exit $$?; \
	done

uninstall-pangoincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pangoinclude_HEADERS)'; test -n "$(pangoincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pangoincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pangoincludedir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(aliasdir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(typelibsdir)" "$(DESTDIR)$(pangoincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-aliasDATA install-data-local install-girDATA \
	install-pangoincludeHEADERS install-typelibsDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am: installcheck-binPROGRAMS

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-aliasDATA uninstall-binPROGRAMS \
	uninstall-girDATA uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pangoincludeHEADERS uninstall-typelibsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	check-am ctags-recursive install install-am install-exec-am \
	install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-aliasDATA \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-girDATA install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pangoincludeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip install-typelibsDATA installcheck \
	installcheck-am installcheck-binPROGRAMS installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-aliasDATA uninstall-am \
	uninstall-binPROGRAMS uninstall-girDATA \
	uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pangoincludeHEADERS uninstall-typelibsDATA


include $(INTROSPECTION_MAKEFILE)
pango-win32-res.o: pango.rc
	$(AM_V_GEN) $(WINDRES) $< $@

pango-enum-types.h: s-enum-types-h
s-enum-types-h: $(pango_headers) Makefile.am
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) \
			--fhead "#ifndef __PANGO_ENUM_TYPES_H__\n#define __PANGO_ENUM_TYPES_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
			--fprod "/* enumerations from \"@filename@\" */\n" \
			--vhead "GType @enum_name@_get_type (void);\n#define @ENUMPREFIX@_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" 	\
			--ftail "G_END_DECLS\n\n#endif /* __PANGO_ENUM_TYPES_H__ */" \
		$(pango_headers) ) > tmp-pango-enum-types.h \
	&& (cmp -s tmp-pango-enum-types.h pango-enum-types.h || cp tmp-pango-enum-types.h pango-enum-types.h ) \
	&& rm -f tmp-pango-enum-types.h	\
	&& echo timestamp > $(@F)

pango-enum-types.c: s-enum-types-c
s-enum-types-c: $(pango_headers) Makefile.am
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) \
			--fhead "#include <pango.h>" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" 	\
			--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (g_intern_static_string (\"@EnumName@\"), values);\n  }\n  return etype;\n}\n" \
		$(pango_headers) ) > tmp-pango-enum-types.c \
	&& (cmp -s tmp-pango-enum-types.c pango-enum-types.c || cp tmp-pango-enum-types.c pango-enum-types.c ) \
	&& rm -f tmp-pango-enum-types.c \
	&& echo timestamp > $(@F)

pango-features.h:
	$(AM_V_GEN) cd $(top_builddir) && ./config.status pango/pango-features.h
Pango-1.0.gir: libpango-1.0.la

pangox-win32-res.o: pangox.rc
	$(WINDRES) $< $@
pangoft2-win32-res.o: pangoft2.rc
	$(AM_V_GEN) $(WINDRES) $< $@

PangoFT2-1.0.gir: libpangoft2-1.0.la
PangoFT2-1.0.gir: Pango-1.0.gir
pangoxft-win32-res.o: pangoxft.rc
	$(AM_V_GEN) $(WINDRES) $< $@

PangoXft-1.0.gir: libpangoxft-1.0.la
PangoXft-1.0.gir: Pango-1.0.gir PangoFT2-1.0.gir
#pangocairo-win32-res.o: pangocairo.rc
#	$(AM_V_GEN) $(WINDRES) $< $@

PangoCairo-1.0.gir: libpangocairo-1.0.la
PangoCairo-1.0.gir: Pango-1.0.gir $(PANGOCAIRO_FONT_BACKEND_GI_MODULE).gir
pangowin32-win32-res.o: pangowin32.rc
	$(AM_V_GEN) $(WINDRES) $< $@

# ------------------- win32 build stuff -------------------

#install-def-files:
#	$(AM_V_GEN) mkdir -p $(DESTDIR)$(libdir) && \
#	$(INSTALL) $(srcdir)/pango.def $(DESTDIR)$(libdir)/pango-$(PANGO_API_VERSION).def
#	$(INSTALL) $(srcdir)/pangoft2.def $(DESTDIR)$(libdir)/pangoft2-$(PANGO_API_VERSION).def
#	$(INSTALL) $(srcdir)/pangowin32.def $(DESTDIR)$(libdir)/pangowin32-$(PANGO_API_VERSION).def
#	$(INSTALL) $(srcdir)/pangocairo.def $(DESTDIR)$(libdir)/pangocairo-$(PANGO_API_VERSION).def
##	$(INSTALL) $(srcdir)/pangox.def $(DESTDIR)$(libdir)/pangox-$(PANGO_API_VERSION).def
##	$(INSTALL) $(srcdir)/pangoxft.def $(DESTDIR)$(libdir)/pangoxft-$(PANGO_API_VERSION).def
#uninstall-def-files:
#	-rm $(DESTDIR)$(libdir)/pango$(PANGO_API_VERSION).def
#	-rm $(DESTDIR)$(libdir)/pangoft2-$(PANGO_API_VERSION).def
#	-rm $(DESTDIR)$(libdir)/pangowin32-$(PANGO_API_VERSION).def
#	-rm $(DESTDIR)$(libdir)/pangocairo-$(PANGO_API_VERSION).def
##	-rm $(DESTDIR)$(libdir)/pangox-$(PANGO_API_VERSION).def
##	-rm $(DESTDIR)$(libdir)/pangoxft-$(PANGO_API_VERSION).def
install-def-files:
uninstall-def-files:

#install-ms-lib: $(MS_LIB_FILES)
#	$(INSTALL) pango-$(PANGO_API_VERSION).lib $(DESTDIR)$(libdir)
#	$(INSTALL) pangoft2-$(PANGO_API_VERSION).lib $(DESTDIR)$(libdir)
#	$(INSTALL) pangowin32-$(PANGO_API_VERSION).lib $(DESTDIR)$(libdir)
#	$(INSTALL) pangocairo-$(PANGO_API_VERSION).lib $(DESTDIR)$(libdir)

#uninstall-ms-lib:
#	-rm $(DESTDIR)$(libdir)/pango-$(PANGO_API_VERSION).lib
#	-rm $(DESTDIR)$(libdir)/pangoft2-$(PANGO_API_VERSION).lib
#	-rm $(DESTDIR)$(libdir)/pangowin32-$(PANGO_API_VERSION).lib
#	-rm $(DESTDIR)$(libdir)/pangocairo-$(PANGO_API_VERSION).lib
install-ms-lib:
uninstall-ms-lib:

pango-$(PANGO_API_VERSION).lib: libpango-$(PANGO_API_VERSION).la $(srcdir)/pango.def
	$(AM_V_GEN) lib -machine:$(LIB_EXE_MACHINE_FLAG) -name:libpango-$(PANGO_API_VERSION)-$(PANGO_CURRENT_MINUS_AGE).dll -def:$(srcdir)/pango.def -out:$@

pangoft2-$(PANGO_API_VERSION).lib: libpangoft2-$(PANGO_API_VERSION).la $(srcdir)/pangoft2.def
	$(AM_V_GEN) lib -machine:$(LIB_EXE_MACHINE_FLAG) -name:libpangoft2-$(PANGO_API_VERSION)-$(PANGO_CURRENT_MINUS_AGE).dll -def:$(srcdir)/pangoft2.def -out:$@

pangowin32-$(PANGO_API_VERSION).lib: libpangowin32-$(PANGO_API_VERSION).la $(srcdir)/pangowin32.def
	$(AM_V_GEN) lib -machine:$(LIB_EXE_MACHINE_FLAG) -name:libpangowin32-$(PANGO_API_VERSION)-$(PANGO_CURRENT_MINUS_AGE).dll -def:$(srcdir)/pangowin32.def -out:$@

pangocairo-$(PANGO_API_VERSION).lib: libpangocairo-$(PANGO_API_VERSION).la $(srcdir)/pangocairo.def
	$(AM_V_GEN) lib -machine:$(LIB_EXE_MACHINE_FLAG) -name:libpangocairo-$(PANGO_API_VERSION)-$(PANGO_CURRENT_MINUS_AGE).dll -def:$(srcdir)/pangocairo.def -out:$@

included-modules:
	$(AM_V_GEN) cd $(top_builddir)/modules && $(MAKE) $(AM_MAKEFLAGS) included-modules

$(INCLUDED_LANG_MODULES) $(INCLUDED_X_MODULES) $(INCLUDED_FC_MODULES) $(INCLUDED_WIN32_MODULES) $(INCLUDED_ATSUI_MODULES): included-modules
	$(AM_V_GEN) true

.PHONY: included-modules

$(MODULE_DEF_FILES): $(top_builddir)/config.status
	$(AM_V_GEN) cd $(top_builddir) && $(SHELL) ./config.status pango/$@

install-data-local: install-ms-lib install-def-files

install-exec-hook: 
	-for i in libpangoft2-$(PANGO_API_VERSION).la libpangoxft-$(PANGO_API_VERSION).la libpangox-$(PANGO_API_VERSION).la libpangowin32-$(PANGO_API_VERSION).la; do \
	  test -f $(DESTDIR)$(libdir)/$$i && $(SHELL) $(top_srcdir)/sanitize-la.sh $(DESTDIR)$(libdir)/$$i ; \
	done

uninstall-local: uninstall-ms-lib uninstall-def-files

dist-hook: \
	../build/win32/vs9/pango.vcproj \
	../build/win32/vs9/pangoft2.vcproj \
	../build/win32/vs9/pangocairo.vcproj \
	../build/win32/vs10/pango.vcxproj \
	../build/win32/vs10/pango.vcxproj.filters \
	../build/win32/vs10/pangocairo.vcxproj \
	../build/win32/vs10/pangocairo.vcxproj.filters \
	../build/win32/vs10/pangocairo_fc.vcxproj \
	../build/win32/vs10/pangocairo_fc.vcxproj.filters \
	../build/win32/vs10/pangoft2.vcxproj \
	../build/win32/vs10/pangoft2.vcxproj.filters

# pangowin32.vcproj, pangowin32.vcxproj and pangowin32.vcxproj.filters are not automatically built, it is not being changed

../build/win32/vs9/pango.vcproj: $(top_srcdir)/build/win32/vs9/pango.vcprojin mini-fribidi/libmini-fribidi.sourcefiles
	-rm $@
	for F in $(libpango_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <File RelativePath="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpango.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs9/pango.vcprojin >$@

../build/win32/vs10/pango.vcxproj: $(top_srcdir)/build/win32/vs10/pango.vcxprojin mini-fribidi/libmini-fribidi.vs10.sourcefiles
	-rm $@
	for F in $(libpango_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpango.vs10.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pango.vcxprojin >$@

../build/win32/vs10/pango.vcxproj.filters: $(top_srcdir)/build/win32/vs10/pango.vcxproj.filtersin mini-fribidi/libmini-fribidi.vs10.sourcefiles.filters
	-rm $@
	for F in $(libpango_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'"><Filter>Source Files</Filter></ClCompile>' \
		     ;; \
		esac; \
	done >libpango.vs10.sourcefiles.filters
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pango.vcxproj.filtersin >$@

../build/win32/vs9/pangoft2.vcproj: $(top_srcdir)/build/win32/vs9/pangoft2.vcprojin opentype/libharfbuzz.sourcefiles
	-rm $@
	for F in $(libpangoft2_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <File RelativePath="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpangoft2.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs9/pangoft2.vcprojin >$@

../build/win32/vs10/pangoft2.vcxproj: $(top_srcdir)/build/win32/vs10/pangoft2.vcxprojin opentype/libharfbuzz.vs10.sourcefiles
	-rm $@
	for F in $(libpangoft2_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpangoft2.vs10.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangoft2.vcxprojin >$@

../build/win32/vs10/pangoft2.vcxproj.filters: $(top_srcdir)/build/win32/vs10/pangoft2.vcxproj.filtersin opentype/libharfbuzz.vs10.sourcefiles.filters
	-rm $@
	for F in $(libpangoft2_1_0_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'"><Filter>Source Files</Filter></ClCompile>' \
		     ;; \
		esac; \
	done >libpangoft2.vs10.sourcefiles.filters
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangoft2.vcxproj.filtersin >$@

../build/win32/vs9/pangocairo.vcproj: $(top_srcdir)/build/win32/vs9/pangocairo.vcprojin
# Backend-specific sources for the libpangocairo DLL are explicitly
# listed in the vcprojin file
	-rm $@
	for F in $(pangocairo_core_sources); do \
		case $$F in \
		*.c) echo '   <File RelativePath="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpangocairo.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs9/pangocairo.vcprojin >$@

../build/win32/vs10/pangocairo.vcxproj: $(top_srcdir)/build/win32/vs10/pangocairo.vcxprojin
# Backend-specific sources for the libpangocairo DLL are explicitly
# listed in the vcxprojin file
# I know it does not sound nice to have 2 pangocairo projects/filters sets due to FontConfig usage (or not), but VS2010 forces me to do that...
	-rm $@
	for F in $(pangocairo_core_sources); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpangocairo.vs10.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangocairo.vcxprojin >$@

../build/win32/vs10/pangocairo.vcxproj.filters: $(top_srcdir)/build/win32/vs10/pangocairo.vcxproj.filtersin
# Backend-specific sources for the libpangocairo DLL are explicitly
# listed in the vcxproj.filtersin file
	-rm $@
	for F in $(pangocairo_core_sources); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'"><Filter>Source Files</Filter></ClCompile>' \
		     ;; \
		esac; \
	done >libpangocairo.vs10.sourcefiles.filters
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangocairo.vcxproj.filtersin >$@

../build/win32/vs10/pangocairo_fc.vcxproj: $(top_srcdir)/build/win32/vs10/pangocairo_fc.vcxprojin
# Backend-specific sources for the libpangocairo DLL are explicitly
# listed in the vcxprojin file
	-rm $@
	for F in $(pangocairo_core_sources); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'" />' \
		     ;; \
		esac; \
	done >libpangocairo.vs10.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangocairo_fc.vcxprojin >$@

../build/win32/vs10/pangocairo_fc.vcxproj.filters: $(top_srcdir)/build/win32/vs10/pangocairo_fc.vcxproj.filtersin
# Backend-specific sources for the libpangocairo DLL are explicitly
# listed in the vcxproj.filtersin file
	-rm $@
	for F in $(pangocairo_core_sources); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\pango\'$$F'"><Filter>Source Files</Filter></ClCompile>' \
		     ;; \
		esac; \
	done >libpangocairo.vs10.sourcefiles.filters
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/pangocairo_fc.vcxproj.filtersin >$@

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
